{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangj\\\\Desktop\\\\job_tracker_homepage_update\\\\job_tracker_ui\\\\src\\\\pages\\\\JobPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from '../components/navbar/Navbar';\nimport Modal from 'react-modal';\nimport './JobPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(document.getElementById('root'));\nfunction JobPage() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [isAddOpen, setIsAddOpen] = useState(false);\n  const [newJob, setNewJob] = useState({\n    job_title: '',\n    company: '',\n    location: '',\n    status: '',\n    date_applied: '',\n    notes: '',\n    skills: []\n  });\n  const [editingJob, setEditingJob] = useState(null);\n  const navigate = useNavigate();\n\n  // fetch jobs from server\n  useEffect(() => {\n    axios.get('/jobs').then(response => {\n      // For each job, fetch its associated skills\n      const jobsWithSkillsPromises = response.data.map(job => axios.get(`/jobs/${job.job_id}/skills`).then(res => {\n        return {\n          ...job,\n          skills: res.data || []\n        };\n      }));\n      Promise.all(jobsWithSkillsPromises).then(jobsWithSkills => {\n        setJobs(jobsWithSkills);\n      }).catch(error => console.error(error));\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  // fetch skills from server\n  useEffect(() => {\n    axios.get('/skills').then(response => {\n      setSkills(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const createJob = async event => {\n    event.preventDefault();\n    // post request to create a new job\n    const jobData = {\n      ...newJob,\n      skills: newJob.skills.map(skillTitle => {\n        const matchedSkill = skills.find(s => s.skill_title === skillTitle);\n        return matchedSkill ? matchedSkill.skill_id : null;\n      }).filter(skillId => skillId !== null)\n    };\n    const response = await axios.post('/jobs', jobData);\n    if (response.status === 201) {\n      setIsAddOpen(false);\n      alert(\"Job added\");\n      resetJobForm();\n      const newJobWithSkills = await axios.get(`/jobs/${response.data.job_id}/skills`).then(res => {\n        return {\n          ...response.data,\n          skills: res.data || []\n        };\n      });\n      setJobs([...jobs, newJobWithSkills]);\n    } else {\n      setIsAddOpen(false);\n      alert(\"Unable to add job\");\n      resetJobForm();\n    }\n  };\n  const deleteJob = job_id => {\n    // delete request to delete a job\n    axios.delete(`/jobs/${job_id}`).then(response => {\n      // remove the deleted job from the jobs list\n      setJobs(jobs.filter(job => job.job_id !== job_id));\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const updateJob = (event, job_id) => {\n    event.preventDefault();\n    // put request to update a job\n    axios.put(`/jobs/${job_id}`, editingJob).then(response => {\n      // update the updated job in the jobs list\n      setJobs(jobs.map(job => job.job_id === job_id ? {\n        ...job,\n        ...editingJob\n      } : job));\n\n      // reset editingJob state\n      setEditingJob(null);\n    }).catch(error => {\n      console.error(\"Error from server: \", error); // log any errors\n      console.error(error);\n    });\n  };\n  const editJob = job => {\n    // set the job to be edited\n    setEditingJob(job);\n  };\n  const resetJobForm = () => {\n    setNewJob({\n      job_title: '',\n      company: '',\n      location: '',\n      status: '',\n      date_applied: '',\n      notes: '',\n      skills: []\n    });\n  };\n  const handleOpenAddModal = () => {\n    setIsAddOpen(true);\n  };\n  const handleCloseAddModal = () => {\n    setIsAddOpen(false);\n  };\n  const handleSkillChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions).map(option => option.value);\n    setNewJob({\n      ...newJob,\n      skills: selectedOptions\n    });\n  };\n\n  // Helper function to format date in \"MM/DD/YYYY\" format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"PageHeader\",\n      children: \"My Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JobPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"new-job-button\",\n        onClick: handleOpenAddModal,\n        children: \"New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isAddOpen,\n        onRequestClose: handleCloseAddModal,\n        portalClassName: \"\",\n        shouldCloseOnEsc: true,\n        preventScroll: true,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createJob,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Track a New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter your new Job/Internship information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"jobTitle\",\n            type: \"text\",\n            value: newJob.job_title,\n            onChange: e => setNewJob({\n              ...newJob,\n              job_title: e.target.value\n            }),\n            placeholder: \"Job title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"jobTitle\",\n            type: \"text\",\n            value: newJob.company,\n            onChange: e => setNewJob({\n              ...newJob,\n              company: e.target.value\n            }),\n            placeholder: \"Company\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"jobTitle\",\n            type: \"text\",\n            value: newJob.location,\n            onChange: e => setNewJob({\n              ...newJob,\n              location: e.target.value\n            }),\n            placeholder: \"Location\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"jobTitle\",\n            value: newJob.status,\n            onChange: e => setNewJob({\n              ...newJob,\n              status: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select Status--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Applied\",\n              children: \"Applied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Waiting to hear back\",\n              children: \"Waiting to hear back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Interviewed\",\n              children: \"Interviewed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Offer Accepted\",\n              children: \"Offer Accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Offer Denied\",\n              children: \"Offer Denied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Rejected\",\n              children: \"Rejected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"jobDesc\",\n            multiple: true,\n            value: newJob.skills,\n            onChange: handleSkillChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select Skill--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: skill.skill_title,\n              children: skill.skill_title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"jobTitle\",\n            type: \"date\",\n            value: newJob.date_applied,\n            onChange: e => setNewJob({\n              ...newJob,\n              date_applied: e.target.value\n            }),\n            placeholder: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"jobDesc\",\n            type: \"text\",\n            value: newJob.notes,\n            onChange: e => setNewJob({\n              ...newJob,\n              notes: e.target.value\n            }),\n            placeholder: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"jobSubmit\",\n            type: \"submit\",\n            children: \"Add Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"jobs\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Skills\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date Applied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Edit/Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: jobs.map((job, index) => {\n              console.log(job);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.job_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.company\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: `status-${job.status.replace(/\\s+/g, '').toLowerCase()}`,\n                  children: job.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.skills && job.skills.skills ? job.skills.skills.map((skill, skillIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [skill, skillIndex < job.skills.skills.length - 1 ? ', ' : '']\n                  }, skillIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this)) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(job.date_applied)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"notes-cell\",\n                  children: job.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => navigate(`/jobs/edit/${job.job_id}`),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteJob(job.job_id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(JobPage, \"yzeYwEONLtPlZsXZKCU5lGjBuas=\", false, function () {\n  return [useNavigate];\n});\n_c = JobPage;\nexport default JobPage;\nvar _c;\n$RefreshReg$(_c, \"JobPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Navbar","Modal","jsxDEV","_jsxDEV","setAppElement","document","getElementById","JobPage","_s","jobs","setJobs","skills","setSkills","isAddOpen","setIsAddOpen","newJob","setNewJob","job_title","company","location","status","date_applied","notes","editingJob","setEditingJob","navigate","get","then","response","jobsWithSkillsPromises","data","map","job","job_id","res","Promise","all","jobsWithSkills","catch","error","console","createJob","event","preventDefault","jobData","skillTitle","matchedSkill","find","s","skill_title","skill_id","filter","skillId","post","alert","resetJobForm","newJobWithSkills","deleteJob","delete","updateJob","put","editJob","handleOpenAddModal","handleCloseAddModal","handleSkillChange","e","selectedOptions","Array","from","target","option","value","formatDate","dateString","date","Date","month","String","getMonth","padStart","day","getDate","year","getFullYear","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onClick","isOpen","onRequestClose","portalClassName","shouldCloseOnEsc","preventScroll","onSubmit","id","onChange","placeholder","required","multiple","skill","index","log","replace","toLowerCase","skillIndex","length","_c","$RefreshReg$"],"sources":["C:/Users/wangj/Desktop/job_tracker_homepage_update/job_tracker_ui/src/pages/JobPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Navbar from '../components/navbar/Navbar';\r\nimport Modal from 'react-modal';\r\nimport './JobPage.css';\r\n\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nfunction JobPage() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [skills, setSkills] = useState([]);\r\n    const [isAddOpen, setIsAddOpen] = useState(false);\r\n    const [newJob, setNewJob] = useState({\r\n        job_title: '',\r\n        company: '',\r\n        location: '',\r\n        status: '',\r\n        date_applied: '',\r\n        notes: '',\r\n        skills: [],\r\n    });\r\n    const [editingJob, setEditingJob] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    // fetch jobs from server\r\n    useEffect(() => {\r\n        axios.get('/jobs')\r\n            .then(response => {\r\n                // For each job, fetch its associated skills\r\n                const jobsWithSkillsPromises = response.data.map(job => \r\n                    axios.get(`/jobs/${job.job_id}/skills`)\r\n                        .then(res => {\r\n                            return { ...job, skills: res.data || []}\r\n                        })\r\n                );\r\n                Promise.all(jobsWithSkillsPromises)\r\n                .then(jobsWithSkills => {\r\n                    setJobs(jobsWithSkills)\r\n                })\r\n                .catch(error => console.error(error));\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n    \r\n\r\n    // fetch skills from server\r\n    useEffect(() => {\r\n        axios.get('/skills')\r\n            .then(response => {\r\n                setSkills(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n    \r\n\r\n    const createJob = async (event) => {\r\n        event.preventDefault();\r\n        // post request to create a new job\r\n        const jobData = {\r\n            ...newJob, \r\n            skills: newJob.skills.map(skillTitle => {\r\n                const matchedSkill = skills.find(s => s.skill_title === skillTitle);\r\n                return matchedSkill ? matchedSkill.skill_id : null;\r\n            }).filter(skillId => skillId !== null)\r\n        };\r\n        const response = await axios.post('/jobs', jobData);\r\n        if (response.status === 201) {\r\n            setIsAddOpen(false);\r\n            alert(\"Job added\");\r\n            resetJobForm();\r\n            const newJobWithSkills = await axios.get(`/jobs/${response.data.job_id}/skills`)\r\n            .then(res => {\r\n                return { ...response.data, skills: res.data || []}\r\n            })\r\n            setJobs([...jobs, newJobWithSkills]);\r\n        } else {\r\n            setIsAddOpen(false);\r\n            alert(\"Unable to add job\");\r\n            resetJobForm();\r\n        }\r\n    };\r\n\r\n    const deleteJob = (job_id) => {\r\n        // delete request to delete a job\r\n        axios.delete(`/jobs/${job_id}`)\r\n            .then(response => {\r\n                // remove the deleted job from the jobs list\r\n                setJobs(jobs.filter((job) => job.job_id !== job_id));\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    };\r\n    \r\n\r\n    const updateJob = (event, job_id) => {\r\n        event.preventDefault();\r\n        // put request to update a job\r\n        axios.put(`/jobs/${job_id}`, editingJob)\r\n            .then(response => {\r\n                // update the updated job in the jobs list\r\n                setJobs(jobs.map(job => job.job_id === job_id ? {...job, ...editingJob} : job));\r\n                \r\n                // reset editingJob state\r\n                setEditingJob(null);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error from server: \", error);  // log any errors\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    const editJob = (job) => {\r\n        // set the job to be edited\r\n        setEditingJob(job);\r\n    };\r\n\r\n    const resetJobForm = () => {\r\n        setNewJob({ job_title: '', company: '', location: '', status: '', date_applied: '', notes: '' , skills: []});\r\n    };\r\n\r\n    const handleOpenAddModal = () => {\r\n        setIsAddOpen(true);\r\n    };\r\n\r\n    const handleCloseAddModal = () => {\r\n        setIsAddOpen(false);\r\n    };\r\n\r\n    const handleSkillChange = (e) => {\r\n        const selectedOptions = Array.from(e.target.selectedOptions).map(option => option.value);\r\n        setNewJob({ ...newJob, skills: selectedOptions });\r\n    };\r\n\r\n    // Helper function to format date in \"MM/DD/YYYY\" format\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const month = String(date.getMonth() + 1).padStart(2, '0');\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const year = date.getFullYear();\r\n        return `${month}/${day}/${year}`;\r\n    };\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1 className=\"PageHeader\">My Jobs</h1>\r\n            {/* form to create a new job */}\r\n            <div className='JobPage'>\r\n                <button type=\"button\" className=\"new-job-button\"\r\n                        onClick={handleOpenAddModal}>\r\n                    New Job\r\n                </button>\r\n                <Modal\r\n                    isOpen={isAddOpen}\r\n                    onRequestClose={handleCloseAddModal}\r\n                    portalClassName={\"\"}\r\n                    shouldCloseOnEsc={true}\r\n                    preventScroll={true}\r\n                >\r\n                <form onSubmit={createJob}>\r\n                    <h2>Track a New Job</h2>\r\n                    <hr /> {/* line */}\r\n                    <p>Enter your new Job/Internship information</p>\r\n                    <input id= 'jobTitle' type=\"text\" value={newJob.job_title} onChange={e => setNewJob({ ...newJob, job_title: e.target.value })} placeholder=\"Job title\" required />\r\n                    <input id= 'jobTitle' type=\"text\" value={newJob.company} onChange={e => setNewJob({ ...newJob, company: e.target.value })} placeholder=\"Company\" required />\r\n                    <input id= 'jobTitle' type=\"text\" value={newJob.location} onChange={e => setNewJob({ ...newJob, location: e.target.value })} placeholder=\"Location\" required />\r\n                    <select id= 'jobTitle' value={newJob.status} onChange={e => setNewJob({ ...newJob, status: e.target.value })} required>\r\n                        <option value=\"\">--Select Status--</option>\r\n                        <option value=\"Applied\">Applied</option>\r\n                        <option value=\"Waiting to hear back\">Waiting to hear back</option>\r\n                        <option value=\"Interviewed\">Interviewed</option>\r\n                        <option value=\"Offer Accepted\">Offer Accepted</option>\r\n                        <option value=\"Offer Denied\">Offer Denied</option>\r\n                        <option value=\"Rejected\">Rejected</option>\r\n                    </select>\r\n                    <select id= 'jobDesc' multiple value={newJob.skills} onChange={handleSkillChange} required>\r\n                        <option value=\"\">--Select Skill--</option>\r\n                        {skills.map((skill, index) => (\r\n                            <option key={index} value={skill.skill_title}>{skill.skill_title}</option>\r\n                        ))}\r\n                    </select>\r\n                    <input id= 'jobTitle' type=\"date\" value={newJob.date_applied} onChange={e => setNewJob({ ...newJob, date_applied: e.target.value })} placeholder=\"Date\" />\r\n                    <input id= 'jobDesc' type=\"text\" value={newJob.notes} onChange={e => setNewJob({ ...newJob, notes: e.target.value })} placeholder=\"Notes\" />\r\n                    <button id=\"jobSubmit\" type=\"submit\">Add Job</button>\r\n                </form>\r\n                </Modal>\r\n                {/* list of jobs */}\r\n                <div>\r\n                        <table id=\"jobs\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Job title</th>\r\n                                <th>Company</th>\r\n                                <th>Location</th>\r\n                                <th>Status</th>\r\n                                <th>Skills</th>\r\n                                <th>Date Applied</th>\r\n                                <th>Notes</th>\r\n                                <th>Edit/Delete</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {/*\r\n                            Iterates over the skills objects in skillsList and sends to Skills\r\n                            component to dynamically render each table row.\r\n                            */}\r\n                            {jobs.map((job, index) => {\r\n                                console.log(job);\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{job.job_title}</td>\r\n                                    <td>{job.company}</td>\r\n                                    <td>{job.location}</td>\r\n                                    <td className={`status-${job.status.replace(/\\s+/g, '').toLowerCase()}`}>\r\n                                        {job.status}</td>\r\n                                    <td>{\r\n                                        job.skills && job.skills.skills\r\n                                        ? job.skills.skills.map((skill, skillIndex) => (\r\n                                                <span key={skillIndex}>{skill}{skillIndex < job.skills.skills.length - 1 ? ', ' : ''}</span>\r\n                                            ))\r\n                                            : \"\"\r\n                                        }\r\n                                    </td>\r\n                                    <td>{formatDate(job.date_applied)}</td>\r\n                                    <td className=\"notes-cell\">{job.notes}</td>\r\n                                    <td>\r\n                                        <button onClick={() => navigate(`/jobs/edit/${job.job_id}`)}>Edit</button>\r\n                                        <button onClick={() => deleteJob(job.job_id)}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}